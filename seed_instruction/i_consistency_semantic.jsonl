{"instruction": "Generate five images of flashcards displaying all the odd numbers in [0, 10] increasingly. Each image should show one numeral flashcard.", "object": ["correctly rendered number 1 as the only number on the only flashcard", "correctly rendered number 3 as the only number on the only flashcard", "correctly rendered number 5 as the only number on the only flashcard", "correctly rendered number 7 as the only number on the only flashcard", "correctly rendered number 9 as the only number on the only flashcard"], "instruction_para": "Create five images of flashcards, each displaying one odd number from the range [0, 10] in increasing order. Each image should contain a single numeral flashcard."}
{"instruction": "Generate four images of flashcards displaying all the prime numbers in [0, 10] decreasingly. Each image should show one numeral flashcard.", "object": ["correctly rendered number 7 as the only number on the only flashcard", "correctly rendered number 5 as the only number on the only flashcard", "correctly rendered number 3 as the only number on the only flashcard", "correctly rendered number 2 as the only number on the only flashcard"], "instruction_para": "Create four images of flashcards, each displaying one prime number between 0 and 10 in descending order. Each image should contain a single numeral flashcard."}
{"instruction": "Generate four images of notes displaying the first letter of January, February, March, April arranged in alphabetical order. Each image should contain one letter.", "object": ["correctly rendered letter A (case insensitive) as the only main letter on the only note", "correctly rendered letter F (case insensitive) as the only main letter on the only note", "correctly rendered letter J (case insensitive) as the only main letter on the only note", "correctly rendered letter M (case insensitive) as the only main letter on the only note"], "instruction_para": "Create four images of notes, each showing the first letter of January, February, March, and April, arranged in alphabetical order. Each image must contain only one letter."}
{"instruction": "Generate five images of notes displaying the first letter of five weekdays arranged in the order of the days of the week. Each image contain one letter.", "object": ["correctly rendered letter M (case insensitive) as the only main letter on the only note", "correctly rendered letter T (case insensitive) as the only main letter on the only note", "correctly rendered letter W (case insensitive) as the only main letter on the only note", "correctly rendered letter T (case insensitive) as the only main letter on the only note", "correctly rendered letter F (case insensitive) as the only main letter on the only note"], "instruction_para": "Create five images of notes, each showing the first letter of a weekday, arranged in the order of the days of the week. Each image should display one letter."}
{"instruction": "Generate five images of electronic clocks displaying times from 3:00 to 4:00 at 15-minute intervals. Each image should feature one clock.", "object": ["an electronic clock at 3:00 without other clocks", "an electronic clock at 3:15 without other clocks", "an electronic clock at 3:30 without other clocks", "an electronic clock at 3:45 without other clocks", "an electronic clock at 4:00 without other clocks"], "instruction_para": "Create five images, each showing an electronic clock displaying a time between 3:00 and 4:00 at 15-minute intervals. Each image must contain a single clock."}
{"instruction": "Generate three images of mechanical clocks displaying times from 8:00 to 9:00 at 30-minute intervals. Each image should feature one clock.", "object": ["a mechanical clock at 8:00 (the hour hand points 8 and the minute hand points at 12) without other clocks", "a mechanical clock at 8:30 (the hour hand is between 8 and 9 and the minute hand points at 6) without other clocks", "a mechanical clock at 9:00 (the hour hand points 9 and the minute hand points at 12) without other clocks"], "instruction_para": "Create three images of mechanical clocks showing times between 8:00 and 9:00 at 30-minute intervals, with each image containing a single clock."}
{"instruction": "Generate five images of shirts in various colors (purple, green, red, yellow and blue) arranged in rainbow order. Each image should show one shirt.", "object": ["a red shirt without shirts of other colors", "a yellow shirt without shirts of other colors", "a green shirt without shirts of other colors", "a blue shirt without shirts of other colors", "a purple shirt without shirts of other colors"], "instruction_para": "Create five images, each featuring a single shirt in one of the following colors: purple, blue, green, yellow, and red, arranged in rainbow order. Each image should show one shirt."}
{"instruction": "Generate five images of chairs in various color (white, orange, brown, red and pink), arranged in alphabetical order by color name. Each image should focus on only one color.", "object": ["a brown chair without chairs of other colors", "a orange chair without chairs of other colors", "a pink chair without chairs of other colors", "a red chair without chairs of other colors", "a white chair without chairs of other colors"], "instruction_para": "Create five images of chairs, each in a different color: brown, orange, pink, red, and white, arranged in alphabetical order by color name. Each image should feature a chair of only one color."}
{"instruction": "Generate four images of regular polygons with increasing numbers of sides, starting with a triangle and ending with a hexagon. Each image should display one polygon.", "object": ["only triangle (consider only math geometric shapes)", "only square (consider only math geometric shapes)", "only pentagon (consider only math geometric shapes)", "only hexagon (consider only math geometric shapes)"], "instruction_para": "Create four images, each showing a regular polygon with an increasing number of sides, beginning with a triangle and ending with a hexagon. Each image must feature a single polygon."}
{"instruction": "Generate three images of forest representing different seasons in time order, from fall to spring. Each image should depict the forest in one season.", "object": ["forest in autumn", "forest in winter", "forest in spring"], "instruction_para": "Create three images of a forest, each representing a different season in chronological order from fall to spring. Each image must illustrate the forest during one specific season."}
{"instruction": "Generate four images illustrating the process of a white square being painted red. Paint one quarter of the square red in each image, starting with the upper-left quarter and proceeding clockwise.", "object": ["a white square with only the exact upper-left quarter red", "a white square with only the exact upper half red", "a red square with only the exact bottom-left quarter white", "a fully red square"], "instruction_para": "Create four images that depict a white square gradually being painted red. In each image, paint one additional quarter of the square red, beginning with the upper-left quarter and moving clockwise."}
{"instruction": "Generate five images illustrating the sequential phases of the moon as it transitions from new moon to full moon. Each image should contain one moon phrase.", "object": ["only a new moon", "only a waxing crescent moon", "only a first quarter moon", "only a waxing gibbous moon", "only a full moon"], "instruction_para": "Create five images depicting the sequential phases of the moon as it progresses from new moon to full moon. Each image must feature a single moon phase."}
{"instruction": "Generate four images of Jack card in four suits of decreasing order in bridge. Each image should feature one card.", "object": ["a single Jack of Spades card with a court figure and consistent 'J' markings and Spades suit symbols throughout", "a single Jack of Hearts card with a court figure and consistent 'J' markings and Hearts suit symbols throughout", "a single Jack of Diamonds card with a court figure and consistent 'J' markings and Diamonds suit symbols throughout", "a single Jack of Clubs card with a court figure and consistent 'J' markings and Clubs suit symbols throughout"], "instruction_para": "Create four images, each displaying a Jack card from one of the four suits, arranged in decreasing order of suit ranking in bridge. Each image should contain only one card."}
{"instruction": "Generate four images of chess pieces (bishop, knight, pawn and queen) arranged by increasing movement ability. Each image should contain one chess piece.", "object": ["a pawn chess piece without other kind of chess pieces", "only a knight chess piece without other kind of chess pieces", "only a bishop chess piece without other kind of chess pieces", "only a queen chess piece without without a cross crown and other kind of chess pieces"], "instruction_para": "Create four images, each featuring a single chess piece\u2014bishop, knight, pawn, and queen\u2014arranged in order of increasing movement ability."}
{"instruction": "Generate four images of traditional dice faces with an increasing number of pips from two to the most. Each image should show one dice face.", "object": ["a dice face with 3 pips without other visible faces", "a dice face with 4 pips without other visible faces", "a dice face with 5 pips without other visible faces", "a dice face with 6 pips without other visible faces"], "instruction_para": "Create four images of traditional dice faces, each displaying a single face with an increasing number of pips, starting from two up to the highest number."}
{"instruction": "Generate five images of common farm animals (cow, goat, pig, chicken and horse), arranged alphabetically by their names. Each image should depict one animal.", "object": ["chicken(s) without other kind of animals", "cow(s) without other kind of animals", "goat(s) without other kind of animals", "horse(s) without other kind of animals", "pig(s) without other kind of animals"], "instruction_para": "Create five images, each featuring a different common farm animal\u2014chicken, cow, goat, horse, and pig\u2014arranged in alphabetical order by animal name. Each image should show only one animal."}
{"instruction": "Generate four images of different fruits (cherry, apple, grape and mango), arranged alphabetically by their names. Each image should contain only one fruit.", "object": ["apple without other fruit", "cherry without other fruit", "grape without other fruit", "mango without other fruit"], "instruction_para": "Create four images, each featuring a different fruit\u2014apple, cherry, grape, and mango\u2014arranged in alphabetical order by fruit name. Each image must display only one fruit."}
{"instruction": "Generate three images of balloons in various colors (red, yellow and purple). Arrange them by alphabetical order of their color names. Each image should show only one balloon.", "object": ["a purple balloon without balloons of other color", "a red balloon without balloons of other color", "a yellow balloon without balloons of other color"], "instruction_para": "Create three images, each featuring a single balloon of a different color from: red, yellow, and purple. Arrange the images in alphabetical order based on the color names."}
{"instruction": "Generate three images of kites soaring in the sky. The first image should have one kite. For each subsequent image, add two more kites than the previous image.", "object": ["exactly 1 kite", "exactly 3 kite", "exactly 5 kite"], "instruction_para": "Create three images showing kites flying in the sky. The first image should feature one kite. Each following image must include two additional kites compared to the previous one."}
{"instruction": "Generate four images of balloons floating in the sky. The first image should have five balloons. For each subsequent image, reduce one less balloon than the previous image.", "object": ["exactly 5 balloons", "exactly 4 balloons", "exactly 3 balloons", "exactly 2 balloons"], "instruction_para": "Create four images showing balloons floating in the sky. The first image must contain five balloons, and each following image should have one fewer balloon than the image before it."}
